package Wallet;
import java.net.URL;
import java.util.ResourceBundle;

import DB.getMinedTransactions;
import DB.getTransactionTable;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;

public class MineRewardController implements Initializable{	
	@FXML
	private TableView<Transaction> tableNotValidated = new TableView<Transaction>();
	@FXML
	private TableColumn<Transaction, String> SenderCol = new TableColumn<Transaction,String>();
	@FXML
	private TableColumn<Transaction, String> ReceiverCol = new TableColumn<Transaction,String>();
	@FXML
	private TableColumn<Transaction, Float> AmountCol = new TableColumn<Transaction,Float>();
	@FXML
	private TableColumn<Transaction, String> TimeStampCol = new TableColumn<Transaction,String>();
	private ObservableList<Transaction> TransactionsList = FXCollections.observableArrayList();
	
	@FXML
	private TableView<Transaction> tableValidated = new TableView<Transaction>();
	@FXML
	private TableColumn<Transaction, String> ValidatedSenderCol = new TableColumn<Transaction,String>();
	@FXML
	private TableColumn<Transaction, String> ValidatedReceiverCol = new TableColumn<Transaction,String>();
	@FXML
	private TableColumn<Transaction, Float> ValidatedAmountCol = new TableColumn<Transaction,Float>();
	@FXML
	private TableColumn<Transaction, String> ValidatedTimeStampCol = new TableColumn<Transaction,String>();
	private ObservableList<Transaction> TransactionsMinedList = FXCollections.observableArrayList();
	
	@FXML
	private Button mine = new Button();

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		getTransactionTable getTable = new getTransactionTable();		
		for(int i = 0; i < getTable.getSenderList().size(); i++) {
			TransactionsList.add(i, new Transaction(
					getTable.getSenderList().get(i).toString(),
					getTable.getReceiverList().get(i).toString(),
					getTable.getAmountList().get(i),
					getTable.getTimeStampList().get(i)
			));
		}
		
		SenderCol.setCellValueFactory(new PropertyValueFactory<>("SenderAddr"));
		ReceiverCol.setCellValueFactory(new PropertyValueFactory<>("ReceiverAddr"));
		AmountCol.setCellValueFactory(new PropertyValueFactory<>("Amount"));
		TimeStampCol.setCellValueFactory(new PropertyValueFactory<>("TimeStamp"));
		tableNotValidated.setItems(TransactionsList);
		
		getMinedTransactions getMinedTable = new getMinedTransactions();
		for (int i = 0; i < getMinedTable.getSenderList().size(); i++) {
			TransactionsMinedList.add(i, new Transaction(
					getMinedTable.getSenderList().get(i).toString(),
					getMinedTable.getReceiverList().get(i).toString(),
					getMinedTable.getAmountList().get(i),
					getMinedTable.getTimeStampList().get(i)
			));
		}
		ValidatedSenderCol.setCellValueFactory(new PropertyValueFactory<>("SenderAddr"));
		ValidatedReceiverCol.setCellValueFactory(new PropertyValueFactory<>("ReceiverAddr"));
		ValidatedAmountCol.setCellValueFactory(new PropertyValueFactory<>("Amount"));
		ValidatedTimeStampCol.setCellValueFactory(new PropertyValueFactory<>("TimeStamp"));
		tableValidated.setItems(TransactionsMinedList);
	}
	
	@FXML
	public void mineration(ActionEvent ev) {
		
	}
	
}
