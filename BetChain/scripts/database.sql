create database if not exists wallet;

use wallet;

CREATE TABLE Utilizador(
	IdUtilizador INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    Nome TEXT NOT NULL,
    Idade int NOT NULL,
    DataNascimento TEXT NOT NULL,
    Email TEXT NOT NULL,
    PalavraPasse Text NOT NULL,
    BetCoins float NOT NULL,
    PrivateAddress TEXT NOT NULL,
    PublicAddress TEXT NOT NULL
);

CREATE TABLE RecoveryWords(
	IdRecovery int PRIMARY KEY NOT NULL AUTO_INCREMENT,
	Word1 TEXT NOT NULL,
	Word2 TEXT NOT NULL,
	Word3 TEXT NOT NULL,
	Word4 TEXT NOT NULL,
	Word5 TEXT NOT NULL,
	Word6 TEXT NOT NULL,
	Word7 TEXT NOT NULL,
	Word8 TEXT NOT NULL,
	Word9 TEXT NOT NULL,
	Word10 TEXT NOT NULL,
	Word11 TEXT NOT NULL,
	Word12 TEXT NOT NULL,
    IdUtilizador INT,
    FOREIGN KEY (IdUtilizador) REFERENCES Utilizador(IdUtilizador)
);

CREATE TABLE BeforeGameTransaction(
	IdBeforeTransaction INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    IdUtilizador INT,
    FOREIGN KEY (IdUtilizador) REFERENCES Utilizador(IdUtilizador),
	BetAmount INT NOT NULL,
    IsDebit BOOL
);

CREATE TABLE Transactions(
	IdTransaction INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    IdBeforeTransaction INT NOT NULL,
	SenderPublicAddress TEXT NOT NULL,
    SenderPrivateAddress TEXT NOT NULL,
    ReceiverPublicAddress TEXT NOT NULL,
    MinedTransaction BOOL,
    TimeStamp timestamp NOT NULL,
    Amount INT NOT NULL,
    Node INT NOT NULL,
	FOREIGN KEY (IdBeforeTransaction) REFERENCES BeforeGameTransaction(IdBeforeTransaction)
);

CREATE TABLE Savepass(
	motherboardID VARCHAR(512) PRIMARY KEY,
    pass TEXT NOT NULL,
    IdUtilizador INT,
    FOREIGN KEY (IdUtilizador) REFERENCES Utilizador(IdUtilizador)
);

INSERT INTO `wallet`.`utilizador` (`IdUtilizador`, `Nome`, `Idade`, `DataNascimento`, `Email`, `PalavraPasse`, `BetCoins`, `PrivateAddress`, `PublicAddress`) VALUES ('2', 'admin', '40', '12/10/2000', 'admin@gmail.com', 'admin123', '100000', '3082025d02010002818100aa74369b9f67cef12e141346f12500e148a4216908829f4ec86de115e417102feb898d9f86ad32568cf65f75c0eb4eebea4100d1784b08c02b9f8a0347f3c2fd0b636ff74263a9d1ea6aaca7e17056f36a3b82179ec107f1d022343a98e750be698a13e257f802504792773840681fb9b52b98d02f75631f02be72b170ea144b020301000102818002d45a081c4dccf0ec2dfe21ed71714e98dc663ac80548ac4fd2d5853102009a163d5acec9d0d59a2ecdda2f371f50d891e69e2328d3f07025cfa24491134d50fee372cc71623a3d940a9f1dfa6e783319413aad3801a0d582a724660dd4edec6ec62b8a256769322e63c8b51cc3cb8997c9af334dcc9edc90da43abe42afc15024100cfc17fb2e04097f2bd157953734c6225e40b023e72bb6539fd13a6555c820350d4f01acf4db42b38c71465a52462c5e2d474e31217560a534c866dde8e77cf8f024100d20938bf14c5aad35e5359ebf048481cb1f39da6cb7c037280e55098ba451f2c8426f88d890423e695476dd1bbc667475a4e83cfb22785824a39af15cc91518502410096f94d9c269caa0f0adb350cb0a7dc571eade5568e37a1eb0eff1d8bc0aaf64fe23e0dad821120aba4f82c9962a4a89b1abb4a5bd63b7f4b633bf951970477ff02410089efc474b90f97c0789204dc0e516a0a6e53af957acd56f63bf05d9defb6b56266e7b1144287958c393d4fc20daf9ee41d4ab30613da20b4104b11d11f27d0810240630bff58dae941b9505ecc1a67a55a2d4cc159855489cdce7f86b59b174794202c2316d4cbf55761750a2ab4bffb125524a96e0a577b44b112ace45f349c9b62', '30819f300d06092a864886f70d010101050003818d0030818902818100aa74369b9f67cef12e141346f12500e148a4216908829f4ec86de115e417102feb898d9f86ad32568cf65f75c0eb4eebea4100d1784b08c02b9f8a0347f3c2fd0b636ff74263a9d1ea6aaca7e17056f36a3b82179ec107f1d022343a98e750be698a13e257f802504792773840681fb9b52b98d02f75631f02be72b170ea144b0203010001');


